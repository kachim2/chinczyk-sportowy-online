name: CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2019, os: windows-2019  }
        - { name: Windows VS2022, os: windows-2022  }
        - { name: Linux GCC,      os: ubuntu-latest }
        - { name: Linux Clang,    os: ubuntu-latest, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: MacOS XCode,    os: macos-latest  }
        config:
        - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }

    steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxi-dev libxinerama-dev libxkbcommon-dev libwayland-dev wayland-scanner++ libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure
      shell: bash
      run: cmake -S . -B build -DCMAKE_INSTALL_PREFIX=install ${{matrix.platform.flags}} ${{matrix.config.flags}}

    - name: Build
      shell: bash
      run: cmake --build build --config Release 
    - name: Create zip
      shell: bash
      run: tar acvf "${{ matrix.platform.name }} ${{ matrix.config.name }}.zip"  ./build/bin/*
    - name: Install
      shell: bash
      run: cmake --install build --config Release
    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
        path: ./build/bin/
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: "${{ matrix.platform.name }} ${{ matrix.config.name }}.zip"
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
